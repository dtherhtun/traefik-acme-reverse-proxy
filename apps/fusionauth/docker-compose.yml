version: '3'

services:
  db:
    image: postgres:11.9-alpine
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - db
    restart: unless-stopped
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  fusionauth:
    image: fusionauth/fusionauth-app:latest
    depends_on:
      - db
    environment:
      DATABASE_URL: jdbc:postgresql://db:5432/fusionauth
      # Prior to version 1.19.0, use this deprecated name
      # DATABASE_ROOT_USER: ${POSTGRES_USER}
      DATABASE_ROOT_USERNAME: ${POSTGRES_USER}
      DATABASE_ROOT_PASSWORD: ${POSTGRES_PASSWORD}
      # Prior to version 1.19.0, use this deprecated name
      # DATABASE_USER: ${DATABASE_USER}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      # Prior to version 1.19.0, use this deprecated names
      # FUSIONAUTH_MEMORY: ${FUSIONAUTH_MEMORY}
      # FUSIONAUTH_SEARCH_ENGINE_TYPE: database
      # FUSIONAUTH_URL: http://fusionauth:9011
      # FUSIONAUTH_RUNTIME_MODE: development
      FUSIONAUTH_APP_MEMORY: ${FUSIONAUTH_APP_MEMORY}
      FUSIONAUTH_APP_RUNTIME_MODE: production
      FUSIONAUTH_APP_URL: https://fusionauth.k8smm.org
      SEARCH_TYPE: database


    networks:
     - db
     - proxy
    labels:
      - "traefik.docker.network=proxy"
      - "traefik.enable=true"
      - "traefik.http.routers.fusionauth.entrypoints=websecure"
      - "traefik.http.routers.fusionauth.rule=Host(`fusionauth.k8smm.org`)"
    restart: unless-stopped
    ports:
      - 9011:9011
    volumes:
      - fa_config:/usr/local/fusionauth/config

networks:
  db:
    driver: bridge
  proxy:
       external: true

volumes:
        # db_data:
  fa_config:
